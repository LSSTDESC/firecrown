#!/usr/bin/env python
import sys
import uuid
import pprint
import click
import jinja2


import firecrown
from firecrown.metadata import write_metadata
from firecrown.io import write_statistics
import pyccl


@click.command()
@click.argument('action', type=str)
@click.argument('config', type=str)
@click.option('-o', '--output', type=str, default='.')
@click.option('-v', '--verbose', is_flag=True)
def run(action, config, output, verbose):
    """Watch out! Here comes a firecrown!

    Also, run some ACTION on a CONFIG file."""

    print("Watch out! Here comes a firecrown!")

    if action == 'render':
        with open(config, 'r') as fp:
            config_str = jinja2.Template(fp.read()).render()
        print(' \n' + config_str)
        sys.exit(0)

    analysis_id = uuid.uuid4().hex
    print('analysis id:', analysis_id)

    _config, data = firecrown.parse(config)
    if verbose:
        print("rendered config file:\n", pprint.pformat(_config))

    if action == 'compute':
        params = {}
        for p in ['Omega_k', 'Omega_b', 'Omega_c', 'h',
                  'n_s', 'A_s', 'w0', 'wa']:
            if p in _config['parameters']:
                val = _config['parameters'][p]
                if isinstance(val, list):
                    if len(val) != 3:
                        raise ValueError("Parameters should be specified"
                                         "either as one param or three")
                    val = val[1]
                params[p] = val

        cosmo = pyccl.Cosmology(**params)
        loglike, stats = firecrown.compute_loglike(cosmo=cosmo, data=data)
        print('loglike:', loglike)

    elif action == 'run-cosmosis':
        firecrown.run_cosmosis(_config, data)
        stats = None

    # we associate a unique id with each analysis
    # let's write that out with some extra info
    write_metadata(analysis_id, output, config)
    if stats is not None:
        write_statistics(analysis_id, output, stats)


if __name__ == '__main__':
    run()
