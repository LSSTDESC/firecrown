@startuml

!include skinparams.iuml
!include updatable_frag.iuml

class UpdatableAtom {
  - _update(params : ParamsDict)
  + required_parameters() : RequiredParameters
}

note top of Updatable
  This design uses the **Composite** pattern.
end note

note left of Updatable
  A concrete class must implement //required_parameters//
  to return the names of all parameters that //update// will
  read; //update// must read no parameter names except those
  listed in //required_parameters//.
end note

note bottom of UpdatableAtom
  This is an example; //UpdatableAtom// is
  not an actual class; it is
  an example showing a non-collection
  that implements the //Updatable//
  interface.  
end note

UpdatableAtom -up-|> Updatable

class UpdatableCollection {
  - _update(params : ParamsDict)
  + required_parameters() : RequiredParameters
  + append(item : Updatable)
}

UpdatableCollection *-- Updatable : contents

note left of UpdatableCollection::_update
  Calls //update// on each item in //contents//.
end note

note left of UpdatableCollection::required_parameters
  Returns the appropriate concatenation of the results
  of calling //required_parameters// on each element of
  //contents//.
end note

UpdatableCollection -up-|> Updatable


@enduml
